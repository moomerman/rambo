#!/usr/bin/env ruby

require 'net/http'
require 'benchmark'

class Report
  def initialize(url)
    @url = url
    @results = {}
  end
  def run(n = 100)
    @start = Time.now
    @etag = nil
    n.times do
      res = Net::HTTP.start('localhost', 4000) {|http|
        if @etag
          http.get(@url, {'If-None-Match' => @etag})
        else
          http.get(@url)
        end
      }
      @results[res.code] ||= 0
      @results[res.code] += 1
      @etag = res['ETag']
    end
    puts report
  end
  def report
    "#{@url} => #{@results.inspect} in #{(Time.now - @start).round}s"
  end
end

t1 = Thread.new do
  Report.new('/').run(10)
end

t2 = Thread.new do
  Report.new('/css/moo.css').run(100)
end

t3 = Thread.new do
  Report.new('/posts').run(100)
end

t4 = Thread.new do
  Report.new('/posts/show/1').run(100)
end

# t5 = Thread.new do
#   Report.new('/moo/slow').run(20)
# end

t1.join rescue nil
t2.join rescue nil
t3.join rescue nil
t4.join rescue nil
# t5.join rescue nil
